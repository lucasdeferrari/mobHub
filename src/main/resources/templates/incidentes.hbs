{{#partial "contenido" }}
    <title>Incidentes</title>
    <link rel="stylesheet" href="/css/incidentes.css">
    <!-- Contenido principal de tu página -->
    <div class="incidents-box" >
        <h1 class="text-center">Incidentes</h1>

        <div class="filtro-box">

            <select id="filtro">
                <option value="" disabled selected>Filtrar por...</option>
                <option value="nombre">Nombre</option>
                <option value="servicio">Servicio</option>
                <option value="establecimiento">Establecimiento</option>
                <option value="comunidad">Comunidad</option>
                <option value="abierto">Abierto</option>
                <option value="cerrado">Cerrado</option>
            </select>
            <input type="text" id="busqueda" placeholder="Buscar..." />
        </div>
        <div class="table-container">
            <table class="table table-bordered">
                <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Servicio</th>
                    <th>Establecimiento</th>
                    <th>Comunidad</th>
                    <th>Cerrar Incidente</th>
                    <th>Sugerir Cierre</th>
                </tr>
                </thead>
                <tbody id="tabla-incidentes">

                {{#each incidentes}}
                    <tr data-id="{{this.id}}">
                        <td><a href="/incidentes/{{this.token}}">{{this.nombre}}</a></td>
                        <td>{{this.servicio.nombre}}</td>
                        <td>{{this.establecimiento.nombre}}</td>
                        <td>{{this.comunidad.nombre}}</td>
                        <td>
                            {{#if this.fechaHoraCierre}}
                                <span>Cerrado</span>
                            {{else}}
                                <input type="checkbox" data-id="{{this.id}}">
                            {{/if}}
                        </td>
                        <td class="sugerir-cierre">
                            {{#if this.fechaHoraCierre}}
                                <span>Cerrado</span>
                            {{else}}
                                <input type="checkbox" data-id="{{this.id}}">
                            {{/if}}
                        </td>

                    </tr>
                {{/each}}

                </tbody>
            </table>
        </div>
            <button id="cerrarSeleccionados">Cerrar Seleccionados</button>
    </div>

    <!-- Scripts de Bootstrap y otros recursos -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Manejar clic en el botón "Cerrar Seleccionados"
            document.getElementById('cerrarSeleccionados').addEventListener('click', function() {
                const selectedIncidents = [];
                const checkboxes = document.querySelectorAll('input[type="checkbox"]:checked');


                checkboxes.forEach(function(checkbox) {
                    const incidentId = checkbox.getAttribute('data-id');
                    selectedIncidents.push(incidentId);
                });


                if (selectedIncidents.length > 0) {
                    // Enviar una solicitud al servidor para cambiar el estado de los incidentes a "Cerrado"
                    // Ejemplo con fetch:
                    fetch('/cerrar-incidentes', {
                        method: 'POST',
                        body: JSON.stringify(selectedIncidents),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                            .then(response => {
                                if (response.ok) {
                                    // Actualizar el estado de las filas en la tabla a "Cerrado"
                                    selectedIncidents.forEach(incidentId => {
                                        const row = document.querySelector(`tr[data-id="${incidentId}"`);
                                        if (row) {
                                            const checkbox = row.querySelector('input[type="checkbox"]');
                                            if (!row.querySelector('span')) {
                                                const span = document.createElement('span');
                                                span.textContent = 'Cerrado';
                                                row.querySelector('td:last-child').appendChild(span);
                                                checkbox.remove();
                                            }
                                        }
                                    });
                                }
                            });
                }
            });

            const checkboxesCerrar = document.querySelectorAll('.sugerir-cierre input[type="checkbox"]');
            checkboxesCerrar.forEach(function(checkbox) {
                checkbox.addEventListener('change', function() {
                    // Verificar si la casilla de verificación se ha marcado
                    if (checkbox.checked) {
                        // Realizar una solicitud al servidor para la casilla de verificación seleccionada
                        const incidentId = checkbox.getAttribute('data-id');
                        if (incidentId) {
                            fetch('/sugerir-cierre-incidente/' + incidentId, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            })
                                    .then(response => {
                                        if (response.ok) {
                                            // Realizar acciones adicionales si es necesario
                                        }
                                    });
                        }
                    }
                });
            });

            // Manejar cambio en el elemento <select> con ID "filtro"
            const filtroSelect = document.getElementById('filtro');
            const busquedaInput = document.getElementById('busqueda');

            filtroSelect.addEventListener('change', function() {
                filtrarIncidentes();
            });

            busquedaInput.addEventListener('input', function() {
                filtrarIncidentes();
            });

           function filtrarIncidentes() {
    const filtroValor = filtroSelect.value;
    const busquedaValor = busquedaInput.value.toLowerCase();

    document.querySelectorAll('tbody tr').forEach(function(row) {
        const celda = row.querySelector(`td:nth-child(${getIndiceColumna(filtroValor)})`);
        const estadoCelda = row.querySelector('td:last-child');

        if (filtroValor === '' || coincideBusqueda(celda.textContent, busquedaValor)) {
            row.style.display = 'table-row';
        } else {
            row.style.display = 'none';
        }

        // Verificar si el filtro es "abierto" o "cerrado"
        if (filtroValor === 'abierto' || filtroValor === 'cerrado') {
            const esAbierto = filtroValor === 'abierto';
            const incidenteAbierto = estadoCelda.querySelector('input[type="checkbox"]');
            const incidenteCerrado = estadoCelda.querySelector('span');

            if ((esAbierto && incidenteAbierto) || (!esAbierto && incidenteCerrado)) {
                row.style.display = 'table-row';
            } else {
                row.style.display = 'none';
            }
        }
    });
}

function coincideBusqueda(texto, busqueda) {
    // Verificar si el texto comienza con la búsqueda
    return texto.toLowerCase().startsWith(busqueda);
}


            function getIndiceColumna(filtro) {
                switch (filtro) {
                    case 'nombre':
                        return 1;
                    case 'servicio':
                        return 2;
                    case 'establecimiento':
                        return 3;
                    case 'comunidad':
                        return 4;
                    case 'abierto':
                        return 5;
                    case 'cerrado':
                        return 5;
                    default:
                        return 0;
                }
            }
        });




    </script>
{{/partial}}
{{> templates/base }}

